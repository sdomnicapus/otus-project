{{- $root := . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "otus-project.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "otus-project.name" . }}
    helm.sh/chart: {{ include "otus-project.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    env: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "otus-project.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "otus-project.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}/{{ .Values.image.image }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.appport }}
            name: otus-project-port
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: otus-project-port
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /
              port: otus-project-port
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          env:
        {{- range $key, $value := .Values.public_env_variables }}
          - name: {{ $key }}
            value: {{ $value | quote }}
        {{- end }}
        {{- range $key, $value := .Values.secret_env_variables }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ $root.Values.env_secret_name }}
                key: {{ $key }}
        {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
          - name: config
            mountPath: /code/service/settings.py
            subPath: settings.py
          - mountPath: "/code/media"
            name: media
          - mountPath: "/code/www/static"
            name: static
        - name: {{ .Chart.Name }}-nginx
          image: openresty/openresty:alpine
          imagePullPolicy: Always
          ports:
          - containerPort: {{ .Values.service.port }}
            name: http
            protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
          volumeMounts:
          - name: config
            mountPath: /usr/local/openresty/nginx/conf/nginx.conf
            subPath: nginx.conf
          - name: config
            mountPath: /etc/nginx/conf.d/default.conf
            subPath: default.conf
          - mountPath: "/media"
            name: media
          - mountPath: "/static"
            name: static

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: config
          secret:
            secretName: {{ include "otus-project.fullname" . }}-configs
        - name: static
          persistentVolumeClaim:
            claimName: static
        - name: media
          persistentVolumeClaim:
            claimName: media
